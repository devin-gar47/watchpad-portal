{"ast":null,"code":"var _jsxFileName = \"/Users/veenguyen/Desktop/MS in Software Engineering/SE491/watchpad-portal/src/pages/MediaPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { Button, Row } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport '../components/Media.css';\nimport CommentBox from '../components/CommentBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base_url = 'https://image.tmdb.org/t/p/original/';\n\nfunction MediaPage() {\n  _s();\n\n  let params = useParams();\n  /*\n  async function fetchData() {\n  let fetchUrl = `https://api.themoviedb.org/3/movie/${params.movieId}?${process.env.REACT_APP_APIKEY}=&language=en-US`\n  console.log(fetchUrl)\n  const data = await axios.get(fetchUrl)\n  console.log(data);\n   var obj = data.parseJSON('{\"title\": \"\"}');\n  return data\n   }\n  */\n\n  const [movie, setMovie] = useState('WAITING FOR DATA');\n\n  const getMovieInfo = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${params.movieId}?api_key=${process.env.REACT_APP_APIKEY}&language=en-US`);\n    const data = await response.json();\n    setMovie(data);\n    console.log(movie);\n    console.log(data);\n    return data;\n  };\n\n  useEffect(() => {\n    getMovieInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", movie.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"media_poster\",\n      src: `${base_url}${movie.poster_path}`,\n      alt: movie.title\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Id: \", params.movieId, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", movie.overview, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MediaPage, \"jlqJSk1EHEznuNk5o4of9eYzVAg=\", false, function () {\n  return [useParams];\n});\n\n_c = MediaPage;\nexport default MediaPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"sources":["/Users/veenguyen/Desktop/MS in Software Engineering/SE491/watchpad-portal/src/pages/MediaPage.js"],"names":["axios","React","Button","Row","useParams","useState","useEffect","CommentBox","base_url","MediaPage","params","movie","setMovie","getMovieInfo","response","fetch","movieId","process","env","REACT_APP_APIKEY","data","json","console","log","title","poster_path","id","overview"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,yBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACjB,MAAIC,MAAM,GAAGN,SAAS,EAAtB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,kBAAD,CAAlC;;AACA,QAAMQ,YAAY,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,sCAAqCL,MAAM,CAACM,OAAQ,YAAWC,OAAO,CAACC,GAAR,CAAYC,gBAAiB,iBADrE,CAA5B;AAGA,UAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AACAT,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACH,GATD;;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA,sBAAMF,KAAK,CAACa,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,GAAG,EAAG,GAAEhB,QAAS,GAAEG,KAAK,CAACc,WAAY,EAHzC;AAII,MAAA,GAAG,EAAEd,KAAK,CAACa;AAJf,OACSb,KAAK,CAACe,EADf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAA,0BAAUhB,MAAM,CAACM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,sBAAML,KAAK,CAACgB,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AAcH;;GA7CQlB,S;UACQL,S;;;KADRK,S;AA+CT,eAAeA,SAAf","sourcesContent":["import axios from 'axios'\nimport React from 'react'\nimport { Button, Row } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport '../components/Media.css'\nimport CommentBox from '../components/CommentBox'\n\nconst base_url = 'https://image.tmdb.org/t/p/original/'\nfunction MediaPage() {\n    let params = useParams()\n\n    /*\n    async function fetchData() {\n    let fetchUrl = `https://api.themoviedb.org/3/movie/${params.movieId}?${process.env.REACT_APP_APIKEY}=&language=en-US`\n    console.log(fetchUrl)\n    const data = await axios.get(fetchUrl)\n    console.log(data);\n\n    var obj = data.parseJSON('{\"title\": \"\"}');\n    return data\n\n    }\n    */\n    const [movie, setMovie] = useState('WAITING FOR DATA')\n    const getMovieInfo = async () => {\n        const response = await fetch(\n            `https://api.themoviedb.org/3/movie/${params.movieId}?api_key=${process.env.REACT_APP_APIKEY}&language=en-US`\n        )\n        const data = await response.json()\n        setMovie(data)\n        console.log(movie)\n        console.log(data)\n        return data\n    }\n\n    useEffect(() => {\n        getMovieInfo()\n    }, [])\n\n    return (\n        <>\n            <h1> {movie.title} </h1>\n            <img\n                key={movie.id}\n                className=\"media_poster\"\n                src={`${base_url}${movie.poster_path}`}\n                alt={movie.title}\n            />\n            <h2> Id: {params.movieId} </h2>\n            <h3> {movie.overview} </h3>\n            <CommentBox />\n        </>\n    )\n}\n\nexport default MediaPage\n"]},"metadata":{},"sourceType":"module"}