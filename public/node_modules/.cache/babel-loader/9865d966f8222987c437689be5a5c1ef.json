{"ast":null,"code":"import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\n\nvar XPromap = /*#__PURE__*/function () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n\n  return XPromap;\n}();\n\nvar _xpromap = /*#__PURE__*/_curry3(function _xpromap(f, g, xf) {\n  return new XPromap(f, g, xf);\n});\n\nexport default _xpromap;","map":{"version":3,"sources":["/Users/veenguyen/Desktop/MS in Software Engineering/SE491/watchpad-portal/node_modules/ramda/es/internal/_xpromap.js"],"names":["_curry3","_xfBase","_promap","XPromap","f","g","xf","prototype","init","result","input","_xpromap"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,IAAIC,OAAO,GACX,aACA,YAAY;AACV,WAASA,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuBC,EAAvB,EAA2B;AACzB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACD;;AAEDF,EAAAA,OAAO,CAACI,SAAR,CAAkB,mBAAlB,IAAyCN,OAAO,CAACO,IAAjD;AACAL,EAAAA,OAAO,CAACI,SAAR,CAAkB,qBAAlB,IAA2CN,OAAO,CAACQ,MAAnD;;AAEAN,EAAAA,OAAO,CAACI,SAAR,CAAkB,mBAAlB,IAAyC,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AAChE,WAAO,KAAKJ,EAAL,CAAQ,mBAAR,EAA6BG,MAA7B,EAAqCP,OAAO,CAAC,KAAKE,CAAN,EAAS,KAAKC,CAAd,EAAiBK,KAAjB,CAA5C,CAAP;AACD,GAFD;;AAIA,SAAOP,OAAP;AACD,CAfD,EAFA;;AAmBA,IAAIQ,QAAQ,GACZ,aACAX,OAAO,CAAC,SAASW,QAAT,CAAkBP,CAAlB,EAAqBC,CAArB,EAAwBC,EAAxB,EAA4B;AAClC,SAAO,IAAIH,OAAJ,CAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,CAAP;AACD,CAFM,CAFP;;AAMA,eAAeK,QAAf","sourcesContent":["import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\n\nvar XPromap =\n/*#__PURE__*/\nfunction () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n\n  return XPromap;\n}();\n\nvar _xpromap =\n/*#__PURE__*/\n_curry3(function _xpromap(f, g, xf) {\n  return new XPromap(f, g, xf);\n});\n\nexport default _xpromap;"]},"metadata":{},"sourceType":"module"}