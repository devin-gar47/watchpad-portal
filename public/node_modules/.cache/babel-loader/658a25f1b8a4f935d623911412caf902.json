{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\n\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  return result;\n}\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","map":{"version":3,"sources":["/Users/veenguyen/Desktop/MS in Software Engineering/SE491/watchpad-portal/node_modules/ramda/es/dissocPath.js"],"names":["_curry2","_dissoc","_isInteger","_isArray","assoc","_shallowCloneObject","prop","obj","concat","result","p","dissocPath","path","length","head","tail","Array","prototype","slice","call"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,GAAnC,EAAwC;AACtC,MAAIL,UAAU,CAACI,IAAD,CAAV,IAAoBH,QAAQ,CAACI,GAAD,CAAhC,EAAuC;AACrC,WAAO,GAAGC,MAAH,CAAUD,GAAV,CAAP;AACD;;AAED,MAAIE,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAT,IAAcH,GAAd,EAAmB;AACjBE,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYH,GAAG,CAACG,CAAD,CAAf;AACD;;AAED,SAAOD,MAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,UAAU,GACd,aACAX,OAAO,CAAC,SAASW,UAAT,CAAoBC,IAApB,EAA0BL,GAA1B,EAA+B;AACrC,MAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,WAAOA,GAAP;AACD;;AAED,UAAQK,IAAI,CAACC,MAAb;AACE,SAAK,CAAL;AACE,aAAON,GAAP;;AAEF,SAAK,CAAL;AACE,aAAON,OAAO,CAACW,IAAI,CAAC,CAAD,CAAL,EAAUL,GAAV,CAAd;;AAEF;AACE,UAAIO,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAf;AACA,UAAIG,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BP,IAA3B,EAAiC,CAAjC,CAAX;;AAEA,UAAIL,GAAG,CAACO,IAAD,CAAH,IAAa,IAAjB,EAAuB;AACrB,eAAOT,mBAAmB,CAACS,IAAD,EAAOP,GAAP,CAA1B;AACD,OAFD,MAEO;AACL,eAAOH,KAAK,CAACU,IAAD,EAAOH,UAAU,CAACI,IAAD,EAAOR,GAAG,CAACO,IAAD,CAAV,CAAjB,EAAoCP,GAApC,CAAZ;AACD;;AAfL;AAkBD,CAvBM,CAFP;;AA2BA,eAAeI,UAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\n\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  return result;\n}\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;"]},"metadata":{},"sourceType":"module"}