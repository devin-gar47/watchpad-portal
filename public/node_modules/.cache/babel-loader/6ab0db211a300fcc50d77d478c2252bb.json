{"ast":null,"code":"import _curryN from \"./internal/_curryN.js\";\n/**\n * Splits an array into slices on every occurrence of a value.\n *\n * @func\n * @memberOf R\n * @since v0.26.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhenever(R.equals(2), [1, 2, 3, 2, 4, 5, 2, 6, 7]); //=> [[1], [3], [4, 5], [6, 7]]\n */\n\nvar splitWhenever = /*#__PURE__*/_curryN(2, [], function splitWhenever(pred, list) {\n  var acc = [];\n  var curr = [];\n\n  for (var i = 0; i < list.length; i = i + 1) {\n    if (!pred(list[i])) {\n      curr.push(list[i]);\n    }\n\n    if ((i < list.length - 1 && pred(list[i + 1]) || i === list.length - 1) && curr.length > 0) {\n      acc.push(curr);\n      curr = [];\n    }\n  }\n\n  return acc;\n});\n\nexport default splitWhenever;","map":{"version":3,"sources":["/Users/veenguyen/Desktop/MS in Software Engineering/SE491/watchpad-portal/node_modules/ramda/es/splitWhenever.js"],"names":["_curryN","splitWhenever","pred","list","acc","curr","i","length","push"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GACjB,aACAD,OAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AAChD,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,GAAGA,CAAC,GAAG,CAAzC,EAA4C;AAC1C,QAAI,CAACJ,IAAI,CAACC,IAAI,CAACG,CAAD,CAAL,CAAT,EAAoB;AAClBD,MAAAA,IAAI,CAACG,IAAL,CAAUL,IAAI,CAACG,CAAD,CAAd;AACD;;AAED,QAAI,CAACA,CAAC,GAAGH,IAAI,CAACI,MAAL,GAAc,CAAlB,IAAuBL,IAAI,CAACC,IAAI,CAACG,CAAC,GAAG,CAAL,CAAL,CAA3B,IAA4CA,CAAC,KAAKH,IAAI,CAACI,MAAL,GAAc,CAAjE,KAAuEF,IAAI,CAACE,MAAL,GAAc,CAAzF,EAA4F;AAC1FH,MAAAA,GAAG,CAACI,IAAJ,CAASH,IAAT;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;AACF;;AAED,SAAOD,GAAP;AACD,CAhBM,CAFP;;AAoBA,eAAeH,aAAf","sourcesContent":["import _curryN from \"./internal/_curryN.js\";\n/**\n * Splits an array into slices on every occurrence of a value.\n *\n * @func\n * @memberOf R\n * @since v0.26.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhenever(R.equals(2), [1, 2, 3, 2, 4, 5, 2, 6, 7]); //=> [[1], [3], [4, 5], [6, 7]]\n */\n\nvar splitWhenever =\n/*#__PURE__*/\n_curryN(2, [], function splitWhenever(pred, list) {\n  var acc = [];\n  var curr = [];\n\n  for (var i = 0; i < list.length; i = i + 1) {\n    if (!pred(list[i])) {\n      curr.push(list[i]);\n    }\n\n    if ((i < list.length - 1 && pred(list[i + 1]) || i === list.length - 1) && curr.length > 0) {\n      acc.push(curr);\n      curr = [];\n    }\n  }\n\n  return acc;\n});\n\nexport default splitWhenever;"]},"metadata":{},"sourceType":"module"}