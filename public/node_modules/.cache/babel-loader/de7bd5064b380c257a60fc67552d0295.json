{"ast":null,"code":"var _jsxFileName = \"/Users/veenguyen/Desktop/MS in Software Engineering/SE491/watchpad-portal/src/components/SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Alert, Button, Col, Form, Row } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignupForm(_ref) {\n  _s();\n\n  let {\n    setIsLoading,\n    setError,\n    error\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [usernameValidation, setUsernameValidation] = useState('');\n  const [emailValidation, setEmailValidation] = useState('');\n  const [passwordValidation, setPasswordValidation] = useState('');\n  let navigate = useNavigate();\n\n  function isValid(userInfoObj) {\n    const {\n      username,\n      email,\n      password,\n      confirmPassword\n    } = userInfoObj;\n    let valid = true;\n\n    if (!username) {\n      setUsernameValidation('Username cannot be blank.');\n      valid = false;\n    }\n\n    if (!email) {\n      setEmailValidation('Email cannot be blank.');\n      valid = false;\n    }\n\n    if (!password) {\n      setPasswordValidation('Password cannot be blank.');\n      valid = false;\n    }\n\n    if (password !== confirmPassword) {\n      setPasswordValidation('Passwords must match.');\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  function handleChange(e) {\n    e.preventDefault();\n    setEmailValidation('');\n    setUsernameValidation('');\n    setPasswordValidation('');\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case 'username':\n        setUsername(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      case 'confirmPassword':\n        setConfirmPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    const userInfoObj = {\n      username,\n      email,\n      password,\n      confirmPassword\n    };\n\n    if (!isValid(userInfoObj)) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/user/sign-up`, userInfoObj);\n      navigate('/login');\n      setIsLoading(false);\n    } catch (err) {\n      var _err$response;\n\n      if (!err.response) {\n        setIsLoading(false);\n        setError('Server currently is not running.');\n        return;\n      }\n\n      const errorMessage = err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data;\n      setIsLoading(false);\n      setError(errorMessage);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      hidden: !error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"text-center\",\n      onSubmit: e => handleSubmit(e),\n      \"data-testid\": \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"username\",\n            type: \"text\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: e => handleChange(e),\n            \"data-testid\": \"signup-form-username-input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-danger\",\n            hidden: !usernameValidation,\n            \"data-testid\": \"signup-form-username-validator-error-text\",\n            children: usernameValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => handleChange(e),\n            \"data-testid\": \"signup-form-email-input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-danger\",\n            hidden: !emailValidation,\n            \"data-testid\": \"signup-form-email-validator-error-text\",\n            children: emailValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => handleChange(e),\n            \"data-testid\": \"signup-form-password-input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-danger\",\n            hidden: !passwordValidation,\n            \"data-testid\": \"signup-form-password-validator-error-text\",\n            children: passwordValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => handleChange(e),\n            \"data-testid\": \"signup-form-confirm-password-input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"text-center\",\n        type: \"submit\",\n        \"data-testid\": \"signup-form-submit-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        \"data-testid\": \"signup-form-login-link\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3\",\n          children: \"Have an account already?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignupForm, \"OSkjgNdPgVPL69DQyapUqdcYHoI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/veenguyen/Desktop/MS in Software Engineering/SE491/watchpad-portal/src/components/SignupForm.js"],"names":["axios","React","useState","Alert","Button","Col","Form","Row","Link","useNavigate","SignupForm","setIsLoading","setError","error","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","usernameValidation","setUsernameValidation","emailValidation","setEmailValidation","passwordValidation","setPasswordValidation","navigate","isValid","userInfoObj","valid","handleChange","e","preventDefault","name","value","target","handleSubmit","post","process","env","REACT_APP_API_BASE_URL","err","response","errorMessage","data"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useState } from 'react'\nimport { Alert, Button, Col, Form, Row } from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\n\nfunction SignupForm({ setIsLoading, setError, error }) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameValidation, setUsernameValidation] = useState('')\n    const [emailValidation, setEmailValidation] = useState('')\n    const [passwordValidation, setPasswordValidation] = useState('')\n    let navigate = useNavigate()\n\n    function isValid(userInfoObj) {\n        const { username, email, password, confirmPassword } = userInfoObj\n        let valid = true\n\n        if (!username) {\n            setUsernameValidation('Username cannot be blank.')\n            valid = false\n        }\n        if (!email) {\n            setEmailValidation('Email cannot be blank.')\n            valid = false\n        }\n        if (!password) {\n            setPasswordValidation('Password cannot be blank.')\n            valid = false\n        }\n        if (password !== confirmPassword) {\n            setPasswordValidation('Passwords must match.')\n            valid = false\n        }\n        return valid\n    }\n\n    function handleChange(e) {\n        e.preventDefault()\n        setEmailValidation('')\n        setUsernameValidation('')\n        setPasswordValidation('')\n        const { name, value } = e.target\n        switch (name) {\n            case 'username':\n                setUsername(value)\n                break\n            case 'email':\n                setEmail(value)\n                break\n            case 'password':\n                setPassword(value)\n                break\n            case 'confirmPassword':\n                setConfirmPassword(value)\n                break\n            default:\n                return\n        }\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        setIsLoading(true)\n        const userInfoObj = {\n            username,\n            email,\n            password,\n            confirmPassword,\n        }\n        if (!isValid(userInfoObj)) {\n            setIsLoading(false)\n            return\n        }\n\n        try {\n            await axios.post(\n                `${process.env.REACT_APP_API_BASE_URL}/api/user/sign-up`,\n                userInfoObj\n            )\n            navigate('/login')\n            setIsLoading(false)\n        } catch (err) {\n            if (!err.response) {\n                setIsLoading(false)\n                setError('Server currently is not running.')\n                return\n            }\n            const errorMessage = err?.response?.data\n            setIsLoading(false)\n            setError(errorMessage)\n        }\n    }\n    return (\n        <>\n            <Alert variant=\"danger\" hidden={!error}>\n                {error}\n            </Alert>\n            <Form\n                className=\"text-center\"\n                onSubmit={(e) => handleSubmit(e)}\n                data-testid=\"signup-form\"\n            >\n                <h4 className=\"mb-3\">Create an Account</h4>\n                <Row className=\"mb-3\">\n                    <Col>\n                        <Form.Control\n                            name=\"username\"\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={(e) => handleChange(e)}\n                            data-testid=\"signup-form-username-input-box\"\n                        />\n                        <Form.Text\n                            className=\"text-danger\"\n                            hidden={!usernameValidation}\n                            data-testid=\"signup-form-username-validator-error-text\"\n                        >\n                            {usernameValidation}\n                        </Form.Text>\n                    </Col>\n                    <Col>\n                        <Form.Control\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            value={email}\n                            onChange={(e) => handleChange(e)}\n                            data-testid=\"signup-form-email-input-box\"\n                        />\n                        <Form.Text\n                            className=\"text-danger\"\n                            hidden={!emailValidation}\n                            data-testid=\"signup-form-email-validator-error-text\"\n                        >\n                            {emailValidation}\n                        </Form.Text>\n                    </Col>\n                </Row>\n                <Row className=\"mb-3\">\n                    <Col>\n                        <Form.Control\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => handleChange(e)}\n                            data-testid=\"signup-form-password-input-box\"\n                        />\n                        <Form.Text\n                            className=\"text-danger\"\n                            hidden={!passwordValidation}\n                            data-testid=\"signup-form-password-validator-error-text\"\n                        >\n                            {passwordValidation}\n                        </Form.Text>\n                    </Col>\n                    <Col>\n                        <Form.Control\n                            name=\"confirmPassword\"\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            value={confirmPassword}\n                            onChange={(e) => handleChange(e)}\n                            data-testid=\"signup-form-confirm-password-input-box\"\n                        />\n                    </Col>\n                </Row>\n                <Button\n                    className=\"text-center\"\n                    type=\"submit\"\n                    data-testid=\"signup-form-submit-button\"\n                >\n                    Sign Up\n                </Button>\n                <Link to=\"/login\" data-testid=\"signup-form-login-link\">\n                    <p className=\"mt-3\">Have an account already?</p>\n                </Link>\n            </Form>\n        </>\n    )\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}